{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvMkF;AAC1C;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,EAAE,qDAAc;AAChB,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,2CAA2C,iEAA0B;AACrI;;AAEO;AACP,uBAAuB,qDAAc;AACrC;AACA;AACA;AACA,0CAA0C,qDAAc,oFAAoF,qDAAc;AAC1J;AACA;AACA;AACA;AACA,2CAA2C,qDAAc;AACzD,SAAS,qDAAc;AACvB;;AAEA,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,6CAA6C,iEAA0B;AACvI;;AAEO;AACP,uBAAuB,qDAAc;AACrC;AACA;AACA,+CAA+C,qDAAc;AAC7D;AACA;AACA,4CAA4C,qDAAc,4CAA4C,qDAAc;AACpH;;AAEA,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,qCAAqC,iEAA0B;AAC/H;;AAEO;AACP;AACA,EAAE,qDAAc;AAChB,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,2CAA2C,iEAA0B;AACrI;;AAEO;AACP;AACA,EAAE,qDAAc;AAChB,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,2CAA2C,iEAA0B;AACrI;;AAEO;AACP;AACA,EAAE,qDAAc;AAChB,EAAE,qDAAc;AAChB,sCAAsC,iEAA0B,2CAA2C,iEAA0B;AACrI;;AAEO;AACP;AACA,EAAE,qDAAc;AAChB;;AAEO;AACP,EAAE,qDAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sGAAsG,6BAA6B;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4DAA4D,sDAAsD,gCAAgC;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD,sDAAsD,gCAAgC;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,mDAAmD,sDAAsD,gCAAgC;AACzI,qDAAqD,sDAAsD,gCAAgC;AAC3I,qDAAqD,sDAAsD,gCAAgC;AAC3I,sDAAsD,sDAAsD,gCAAgC;AAC5I;AACA;AACA;AACA;AACA;AACA,UAAU,qDAAc;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP,EAAE,qDAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kDAAkD,yDAAyD,0CAA0C;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD,yDAAyD,0CAA0C;AACvJ,mDAAmD,yDAAyD,0CAA0C;AACtJ,qDAAqD,yDAAyD,0CAA0C;AACxJ,qDAAqD,yDAAyD,0CAA0C;AACxJ,sDAAsD,yDAAyD,0CAA0C;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,0BAA0B,iDAAQ;AAClC,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAmB;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,EAAE,yDAAc;AAChB;AACA,kBAAkB,kDAAW;AAC7B,eAAe,oDAAa;AAC5B;AACA;;AAEA;AACA,EAAE,qDAAc;AAChB;AACA;AACA,iBAAiB,kDAAW;AAC5B,oBAAoB,oDAAa;AACjC;AACA;AACA,0BAA0B,oDAAa;AACvC,6BAA6B,kDAAW;AACxC,yBAAyB,kDAAW;AACpC,4BAA4B,oDAAa;AACzC;AACA;AACA;AACA;AACA,iBAAiB,oDAAa;AAC9B,oBAAoB,kDAAW;AAC/B;AACA;AACA,0BAA0B,kDAAW;AACrC,6BAA6B,oDAAa;AAC1C,yBAAyB,oDAAa;AACtC,4BAA4B,kDAAW;AACvC;AACA;AACA;;AAEA;AACA,oBAAoB,8DAAuB;AAC3C,kBAAkB,4DAAqB;AACvC;;AAEA;AACA,SAAS,2DAAoB,+BAA+B,2DAAoB;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;AC5ZuB;AACoB;AACH;AACF;AACR;;AAE9B;AACA,kDAAkD,uCAAuC;;AAEzF,4DAA4D;AAC5D;;AAEA;AACO;AACA;AACA;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,uEAAuE,4DAA2B,GAAG;AACrG,iEAAiE,sDAAqB,GAAG;AACzF,oEAAoE,yDAAwB,GAAG;AAC/F,sEAAsE,yDAAwB,GAAG;AACjG,mEAAmE,wDAAuB,GAAG;AAC7F,iGAAiG,yDAAwB,GAAG,4CAA4C,uDAAsB,GAAG;AACjM,0EAA0E,0DAAyB,GAAG,4CAA4C,wDAAuB,GAAG;AAC5K,yEAAyE,yDAAwB,GAAG,4CAA4C,uDAAsB,GAAG;AACzK,gEAAgE,2DAA0B,GAAG;AAC7F,kEAAkE,2DAA0B,GAAG;AAC/F,kEAAkE,2DAA0B,GAAG;AAC/F,mEAAmE,2DAA0B,GAAG;AAChG,0GAA0G,wDAAuB,GAAG;AACpI,2DAA2D,sDAAqB;AAChF;;AAEA;AACA;AACA,iFAAiF;AACjF,wFAAwF;AACxF,sFAAsF;AACtF,oFAAoF;AACpF,+EAA+E;AAC/E;AACA;;AAEA;AACA,2CAA2C,qDAAoB;AAC/D,yCAAyC,mDAAkB;AAC3D,wCAAwC,iDAAgB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA,4BAA4B,OAAO,uCAAuC;AAC1E;;;;;;;;;;;;;;;;UCzGA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;UEfA;UACA;UACA;UACA","sources":["webpack:///../node_modules/normalize.css/normalize.css?6f57","webpack:///./assets/styles.scss?13a2","webpack:///./classes.js","webpack:///./events.js","webpack:///./index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","const REGEXP = /^[a-zA-Zа-яА-ЯЁё]+$/;\r\n\r\nexport class keyboard {\r\n  constructor() {\r\n    this.row1 = {};\r\n    this.row1.keyBackTick = {};\r\n    this.row1.keyBackTick.en = new key('`', '~');\r\n    this.row1.keyBackTick.ru = new key('ё', 'Ё');\r\n    this.row1.key1 = new key('1', '!');\r\n    this.row1.key2 = {};\r\n    this.row1.key2.en = new key('2', '@');\r\n    this.row1.key2.ru = new key('2', '\"');\r\n    this.row1.key3 = {};\r\n    this.row1.key3.en = new key('3', '#');\r\n    this.row1.key3.ru = new key('3', '№');\r\n    this.row1.key4 = {};\r\n    this.row1.key4.en = new key('4', '$');\r\n    this.row1.key4.ru = new key('4', ';');\r\n    this.row1.key5 = new key('5', '%');\r\n    this.row1.key6 = {};\r\n    this.row1.key6.en = new key('6', '^');\r\n    this.row1.key6.ru = new key('6', ':');\r\n    this.row1.key7 = {};\r\n    this.row1.key7.en = new key('7', '&');\r\n    this.row1.key7.ru = new key('7', '?');\r\n    this.row1.key8 = new key('8', '*');\r\n    this.row1.key9 = new key('9', '(');\r\n    this.row1.key0 = new key('0', ')');\r\n    this.row1.keyMinus = new key('-', '_');\r\n    this.row1.keyEquals = new key('=', '+');\r\n    this.row1.keyBackspace = new specialKey('Backspace');\r\n\r\n    this.row2 = {};\r\n    this.row2.keyTab = new specialKey('Tab');\r\n    this.row2.keyQ = {};\r\n    this.row2.keyQ.en = new key('q', 'Q');\r\n    this.row2.keyQ.ru = new key('й', 'Й');\r\n    this.row2.keyW = {};\r\n    this.row2.keyW.en = new key('w', 'W');\r\n    this.row2.keyW.ru = new key('ц', 'Ц');\r\n    this.row2.keyE = {};\r\n    this.row2.keyE.en = new key('e', 'E');\r\n    this.row2.keyE.ru = new key('у', 'У');\r\n    this.row2.keyR = {};\r\n    this.row2.keyR.en = new key('r', 'R');\r\n    this.row2.keyR.ru = new key('к', 'К');\r\n    this.row2.keyT = {};\r\n    this.row2.keyT.en = new key('t', 'T');\r\n    this.row2.keyT.ru = new key('е', 'Е');\r\n    this.row2.keyY = {};\r\n    this.row2.keyY.en = new key('y', 'Y');\r\n    this.row2.keyY.ru = new key('н', 'Н');\r\n    this.row2.keyU = {};\r\n    this.row2.keyU.en = new key('u', 'U');\r\n    this.row2.keyU.ru = new key('г', 'Г');\r\n    this.row2.keyI = {};\r\n    this.row2.keyI.en = new key('i', 'I');\r\n    this.row2.keyI.ru = new key('ш', 'Ш');\r\n    this.row2.keyO = {};\r\n    this.row2.keyO.en = new key('o', 'O');\r\n    this.row2.keyO.ru = new key('щ', 'Щ');\r\n    this.row2.keyP = {};\r\n    this.row2.keyP.en = new key('p', 'P');\r\n    this.row2.keyP.ru = new key('з', 'З');\r\n    this.row2.keyLeftBracket = {};\r\n    this.row2.keyLeftBracket.en = new key('[', '{');\r\n    this.row2.keyLeftBracket.ru = new key('х', 'Х');\r\n    this.row2.keyRightBracket = {};\r\n    this.row2.keyRightBracket.en = new key(']', '}');\r\n    this.row2.keyRightBracket.ru = new key('ъ', 'Ъ');\r\n    this.row2.keyBackslash = {};\r\n    this.row2.keyBackslash.en = new key('\\\\', '|');\r\n    this.row2.keyBackslash.ru = new key('\\\\', '/');\r\n    this.row2.keyDelete = new specialKey('Del');\r\n\r\n    this.row3 = {};\r\n    this.row3.keyCapsLock = new specialKey('Caps Lock');\r\n    this.row3.keyA = {};\r\n    this.row3.keyA.en = new key('a', 'A');\r\n    this.row3.keyA.ru = new key('ф', 'Ф');\r\n    this.row3.keyS = {};\r\n    this.row3.keyS.en = new key('s', 'S');\r\n    this.row3.keyS.ru = new key('ы', 'Ы');\r\n    this.row3.keyD = {};\r\n    this.row3.keyD.en = new key('d', 'D');\r\n    this.row3.keyD.ru = new key('в', 'В');\r\n    this.row3.keyF = {};\r\n    this.row3.keyF.en = new key('f', 'F');\r\n    this.row3.keyF.ru = new key('а', 'А');\r\n    this.row3.keyG = {};\r\n    this.row3.keyG.en = new key('g', 'G');\r\n    this.row3.keyG.ru = new key('п', 'П');\r\n    this.row3.keyH = {};\r\n    this.row3.keyH.en = new key('h', 'H');\r\n    this.row3.keyH.ru = new key('р', 'Р');\r\n    this.row3.keyJ = {};\r\n    this.row3.keyJ.en = new key('j', 'J');\r\n    this.row3.keyJ.ru = new key('о', 'О');\r\n    this.row3.keyK = {};\r\n    this.row3.keyK.en = new key('k', 'K');\r\n    this.row3.keyK.ru = new key('л', 'Л');\r\n    this.row3.keyL = {};\r\n    this.row3.keyL.en = new key('l', 'L');\r\n    this.row3.keyL.ru = new key('д', 'Д');\r\n    this.row3.keySemicolon = {};\r\n    this.row3.keySemicolon.en = new key(';', ':');\r\n    this.row3.keySemicolon.ru = new key('ж', 'Ж');\r\n    this.row3.keyQuote = {};\r\n    this.row3.keyQuote.en = new key('\\'', '\"');\r\n    this.row3.keyQuote.ru = new key('э', 'Э');\r\n    this.row3.keyEnter = new specialKey('Enter');\r\n\r\n    this.row4 = {};\r\n    this.row4.keyShiftLeft = new specialKey('Shift');\r\n    this.row4.keyZ = {};\r\n    this.row4.keyZ.en = new key('z', 'Z');\r\n    this.row4.keyZ.ru = new key('я', 'Я');\r\n    this.row4.keyX = {};\r\n    this.row4.keyX.en = new key('x', 'X');\r\n    this.row4.keyX.ru = new key('ч', 'Ч');\r\n    this.row4.keyC = {};\r\n    this.row4.keyC.en = new key('c', 'C');\r\n    this.row4.keyC.ru = new key('с', 'С');\r\n    this.row4.keyV = {};\r\n    this.row4.keyV.en = new key('v', 'V');\r\n    this.row4.keyV.ru = new key('м', 'М');\r\n    this.row4.keyB = {};\r\n    this.row4.keyB.en = new key('b', 'B');\r\n    this.row4.keyB.ru = new key('и', 'И');\r\n    this.row4.keyN = {};\r\n    this.row4.keyN.en = new key('n', 'N');\r\n    this.row4.keyN.ru = new key('т', 'Т');\r\n    this.row4.keyM = {};\r\n    this.row4.keyM.en = new key('m', 'M');\r\n    this.row4.keyM.ru = new key('ь', 'Ь');\r\n    this.row4.keyComma = {};\r\n    this.row4.keyComma.en = new key(',', '<');\r\n    this.row4.keyComma.ru = new key('б', 'Б');\r\n    this.row4.keyPeriod = {};\r\n    this.row4.keyPeriod.en = new key('.', '>');\r\n    this.row4.keyPeriod.ru = new key('ю', 'Ю');\r\n    this.row4.keySlash = {};\r\n    this.row4.keySlash.en = new key('/', '?');\r\n    this.row4.keySlash.ru = new key('.', ',');\r\n    this.row4.keyUp = new specialKey('↑');\r\n    this.row4.keyShiftRight = new specialKey('Shift');\r\n\r\n    this.row5 = {};\r\n    this.row5.keyCtrlLeft = new specialKey('Ctrl');\r\n    this.row5.keyWin = new specialKey('Win');\r\n    this.row5.keyAltLeft = new specialKey('Alt');\r\n    this.row5.keySpace = new key(' ', ' ');\r\n    this.row5.keyAltRight = new specialKey('Alt');\r\n    this.row5.keyLeft = new specialKey('←');\r\n    this.row5.keyDown = new specialKey('↓');\r\n    this.row5.keyRight = new specialKey('→');\r\n    this.row5.keyCtrlRight = new specialKey('Ctrl');\r\n  }\r\n}\r\n\r\nexport class key {\r\n  constructor(primaryChar, secondaryChar) {\r\n    this.key = this.createEmptyKey();\r\n\r\n    this.primaryElement = document.createElement('span');\r\n    this.primaryElement.classList.add('keyboard__key_primary');\r\n    this.primaryElement.textContent = primaryChar;\r\n\r\n    this.isLetter = primaryChar.match(REGEXP);\r\n\r\n    this.secondaryElement = document.createElement('span');\r\n    this.secondaryElement.classList.add('keyboard__key_secondary');\r\n    this.secondaryElement.textContent = secondaryChar;\r\n    \r\n    this.key.append(this.primaryElement);\r\n    this.key.append(this.secondaryElement);\r\n  }\r\n\r\n  createEmptyKey() {\r\n    const emptyKey = document.createElement('span')\r\n    emptyKey.classList.add('keyboard__key');\r\n    return emptyKey;\r\n  }\r\n}\r\n\r\nexport class specialKey {\r\n  constructor(special) {\r\n    this.key = this.createEmptyKey();\r\n    this.specialElement = document.createElement('span');\r\n    this.specialElement.classList.add('keyboard__key_special');\r\n    this.specialElement.textContent = special;\r\n    this.key.append(this.specialElement);\r\n  }\r\n\r\n  createEmptyKey() {\r\n    const emptyKey = document.createElement('span')\r\n    emptyKey.classList.add('keyboard__key');\r\n    return emptyKey;\r\n  }\r\n}","import { textarea, primaryKeys, secondaryKeys, updateLangVars } from \"./index.js\";\nimport { keyboard } from './classes.js';\n\nlet SELECTION_START;\nlet SELECTION_END;\nlet CTRL_FLAG = 0;\nlet ALT_FLAG = 0;\nlet CAPS_FLAG = 0;\nlet SHIFT_FLAG = 0;\n\nexport const handleKeyClick = evt => {\n  randomColor(evt.currentTarget); \n  timeout(evt.currentTarget);\n  updateSelections();\n  textarea.value = updateValue(evt.currentTarget.querySelector('.keyboard__key_primary').textContent);\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START + 1, SELECTION_END + 1) : textarea.setSelectionRange(SELECTION_START + 1, SELECTION_START + 1);\n}\n\nexport const handleBackspaceClick = () => {\n  const currentValue = textarea.value;\n  updateSelections();\n  if (SELECTION_END !== currentValue.length) {\n    if (SELECTION_END !== 0)\n      SELECTION_START === SELECTION_END ? textarea.value = currentValue.slice(0, SELECTION_START - 1) + currentValue.slice(SELECTION_END) : textarea.value = currentValue.slice(0, SELECTION_START) + currentValue.slice(SELECTION_END);\n    else\n      SELECTION_START = 1, SELECTION_END = 1;\n  }\n  else {\n    if (SELECTION_END === SELECTION_START) textarea.value = currentValue.slice(0, -1);\n    else textarea.value = currentValue.slice(0, SELECTION_START);\n  }\n\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START - 1, SELECTION_START - 1) : textarea.setSelectionRange(SELECTION_START, SELECTION_START);\n}\n\nexport const handleDeleteClick = () => {\n  const currentValue = textarea.value;\n  updateSelections();\n  if (SELECTION_START === SELECTION_END) {\n    if (SELECTION_END !== currentValue.length) textarea.value = currentValue.slice(0, SELECTION_START) + currentValue.slice(SELECTION_END + 1);\n  }\n  else {\n    SELECTION_END === currentValue.length ? textarea.value = currentValue.slice(0, SELECTION_START) : textarea.value = currentValue.slice(0, SELECTION_START) + currentValue.slice(SELECTION_END);\n  }\n\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START, SELECTION_START) : textarea.setSelectionRange(SELECTION_START, SELECTION_START);\n}\n\nexport const handleTabClick = () => {\n  updateSelections();\n  textarea.value = updateValue('    ');\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START + 4, SELECTION_END + 4) : textarea.setSelectionRange(SELECTION_START + 4, SELECTION_START + 4);\n}\n\nexport const handleEnterClick = () => {\n  updateSelections();\n  textarea.value = updateValue('\\n');\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START + 1, SELECTION_END + 1) : textarea.setSelectionRange(SELECTION_START + 1, SELECTION_START + 1);\n}\n\nexport const handleKeyArrowClick = evt => {\n  updateSelections();\n  textarea.value = updateValue(evt.currentTarget.querySelector('.keyboard__key_special').textContent);\n  textarea.focus();\n  SELECTION_START === SELECTION_END ? textarea.setSelectionRange(SELECTION_START + 1, SELECTION_END + 1) : textarea.setSelectionRange(SELECTION_START + 1, SELECTION_START + 1);\n}\n\nexport const handleEmptyClick = evt => {\n  evt.preventDefault();\n  textarea.focus();\n}\n\nexport const handleKeyDown = evt => {\n  textarea.focus();\n  const keyArr = document.querySelectorAll('.keyboard__key_primary, .keyboard__key_special');\n  if (evt.code === 'Space') {\n    randomColor(document.querySelector('.keyboard__key_space').parentNode);\n    document.querySelector('.keyboard__key_space').classList.add('keyboard__key_active');\n    return;\n  }\n  keyArr.forEach(key => {\n    switch (evt.key) {\n      case 'Control': {\n        if (key.innerText === 'Ctrl') {\n          if (key.parentNode.classList.contains('keyboard__key_left-ctrl') && evt.code === 'ControlLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-ctrl') && evt.code === 'ControlRight') {\n              key.parentNode.classList.add('keyboard__key_active');\n              randomColor(key.parentNode);\n              if (evt.code === 'ControlLeft') {\n                CTRL_FLAG = 1;\n              }\n          }\n        }\n      }; break;\n      case 'Meta': if (key.innerText === 'Win') key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); break;\n      case 'Shift': {\n        if (key.innerText === 'Shift') {\n          SHIFT_FLAG = 1;\n          keyboardCaseSwitch();\n          if (key.parentNode.classList.contains('keyboard__key_left-shift') && evt.code === 'ShiftLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-shift') && evt.code === 'ShiftRight') {\n               randomColor(key.parentNode);\n              key.parentNode.classList.add('keyboard__key_active');\n          };\n        };\n      }; break;\n      case 'CapsLock': if (key.innerText === 'Caps Lock') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      case 'Alt': case 'AltGraph': {\n        if (key.innerText === 'Alt') {\n          if (key.parentNode.classList.contains('keyboard__key_left-alt') && evt.code === 'AltLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-alt') && evt.code === 'AltRight') {\n              key.parentNode.classList.add('keyboard__key_active');\n              randomColor(key.parentNode);\n              if (evt.code === 'AltLeft') {\n                ALT_FLAG = 1;\n              }\n          }\n        }\n      }; break;\n      case 'Delete': if (key.innerText === 'Del') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      case 'Tab': {\n        if (key.innerText === 'Tab') {\n          handleTabClick();\n          key.parentNode.classList.add('keyboard__key_active');\n          randomColor(key.parentNode);\n          setTimeout(() => {\n            key.parentNode.style.borderColor = '';\n            key.parentNode.classList.remove('keyboard__key_active');\n          }, 500);\n        }\n      }; break;\n      case 'ArrowUp': if (key.innerText === '↑') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      case 'ArrowLeft': if (key.innerText === '←') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      case 'ArrowDown': if (key.innerText === '↓') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      case 'ArrowRight': if (key.innerText === '→') { key.parentNode.classList.add('keyboard__key_active'); randomColor(key.parentNode); }; break;\n      default: if ((key.innerText === evt.key || key.innerText === evt.key.toUpperCase()) ||\n      (key.parentNode.querySelector('.keyboard__key_secondary') && key.parentNode.querySelector('.keyboard__key_secondary').textContent === evt.key && SHIFT_FLAG === 1)) {\n        if (SHIFT_FLAG === 1) {\n          evt.preventDefault();\n          updateSelections();\n          textarea.value = updateValue(key.parentNode.querySelector('.keyboard__key_primary').textContent);\n        }\n        key.parentNode.classList.add('keyboard__key_active');\n        randomColor(key.parentNode);\n      }\n    }\n  });\n}\n\nexport const handleKeyUp = evt => {\n  textarea.focus();\n  if (evt.code === 'Space') {\n    document.querySelector('.keyboard__key_space').parentNode.style.borderColor = '';\n    document.querySelector('.keyboard__key_space').classList.remove('keyboard__key_active');\n    return;\n  }\n  const keyArr = document.querySelectorAll('.keyboard__key_primary, .keyboard__key_special');\n  keyArr.forEach(key => {\n    switch (evt.key) {\n      case 'Control': {\n        if (key.innerText === 'Ctrl') {\n          if (key.parentNode.classList.contains('keyboard__key_left-ctrl') && evt.code === 'ControlLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-ctrl') && evt.code === 'ControlRight') {\n              key.parentNode.style.borderColor = '';\n              key.parentNode.classList.remove('keyboard__key_active');\n              if (evt.code === 'ControlLeft') {\n                if (ALT_FLAG === 1) {\n                  switchLanguage();\n                }\n                CTRL_FLAG = 0;\n              }\n          }\n        }\n      }; break;\n      case 'Meta': if (key.innerText === 'Win') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      case 'Shift': {\n        if (key.innerText === 'Shift') {\n          SHIFT_FLAG = 0;\n          keyboardCaseSwitch();\n          if (key.parentNode.classList.contains('keyboard__key_left-shift') && evt.code === 'ShiftLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-shift') && evt.code === 'ShiftRight') {\n              key.parentNode.style.borderColor = '';\n              key.parentNode.classList.remove('keyboard__key_active');\n          }\n        }\n      }; break;\n      case 'CapsLock': {\n        if (key.innerText === 'Caps Lock') {\n          key.parentNode.style.borderColor = '';\n          key.parentNode.classList.remove('keyboard__key_active');\n          CAPS_FLAG === 0 ? CAPS_FLAG = 1 : CAPS_FLAG = 0;\n          keyboardCaseSwitch();\n        }\n      }; break;\n      case 'Alt': case 'AltGraph': {\n        if (key.innerText === 'Alt') {\n          if (key.parentNode.classList.contains('keyboard__key_left-alt') && evt.code === 'AltLeft' ||\n             !key.parentNode.classList.contains('keyboard__key_left-alt') && evt.code === 'AltRight') {\n              key.parentNode.style.borderColor = '';\n              key.parentNode.classList.remove('keyboard__key_active');\n              if (evt.code === 'AltLeft') {\n                if (CTRL_FLAG === 1) {\n                  switchLanguage();\n                }\n                ALT_FLAG = 0;\n              }\n          }\n        }\n      }; break;\n      case 'Delete': if (key.innerText === 'Del') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      case 'ArrowUp': if (key.innerText === '↑') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      case 'ArrowLeft': if (key.innerText === '←') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      case 'ArrowDown': if (key.innerText === '↓') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      case 'ArrowRight': if (key.innerText === '→') { key.parentNode.classList.remove('keyboard__key_active'); key.parentNode.style.borderColor = ''; }; break;\n      default: if ((key.innerText === evt.key || key.innerText === evt.key.toUpperCase()) ||\n      (key.parentNode.querySelector('.keyboard__key_secondary') && key.parentNode.querySelector('.keyboard__key_secondary').textContent === evt.key && SHIFT_FLAG === 1)) {\n        key.parentNode.style.borderColor = '';\n        key.parentNode.classList.remove('keyboard__key_active');\n      };\n    }\n  });\n}\n\nexport const handleCtrlLeftDown = () => {\n  CTRL_FLAG = 1;\n  if (ALT_FLAG === 1) {\n    switchLanguage();\n  }\n}\n\nexport const handleCtrlLeftUp = () => {\n  CTRL_FLAG = 0;\n}\n\nexport const handleAltLeftDown = () => {\n  ALT_FLAG = 1;\n  if (CTRL_FLAG === 1) {\n    switchLanguage();\n  }\n}\n\nexport const handleAltLeftUp = () => {\n  ALT_FLAG = 0;\n}\n\nexport const keyboardCapsClick = () => {\n  CAPS_FLAG === 1 ? CAPS_FLAG = 0 : CAPS_FLAG = 1;\n  keyboardCaseSwitch();\n}\n\nexport const keyboardShiftDown = () => {\n  SHIFT_FLAG = 1;\n  keyboardCaseSwitch();\n}\n\nexport const keyboardShiftUp = () => {\n  SHIFT_FLAG = 0;\n  keyboardCaseSwitch();\n}\n\nexport const focusLose = () => {\n  CTRL_FLAG, ALT_FLAG = 0;\n  keyboardCaseSwitch();\n  const keyArr = document.querySelectorAll('.keyboard__key_primary, .keyboard__key_special');\n  keyArr.forEach(key => {\n    if (key.parentNode.classList.contains('keyboard__key_active') && key.innerText !== 'Tab') {\n      key.parentNode.style.borderColor = '';\n      key.parentNode.classList.remove('keyboard__key_active');\n    }\n  });\n}\n\nconst switchLanguage = () => {\n  const newKeyboard = new keyboard();\n  const cookies = decodeURIComponent(document.cookie).split(';');\n  const curLang = cookies.find((cookie) => cookie.includes('lang=')).split('=')[1];\n  let lang;\n  curLang === 'en' ? lang = 'ru' : lang = 'en';\n  for (let row in newKeyboard) {\n    for (let key in newKeyboard[row]) {\n      if (newKeyboard[row][key].hasOwnProperty(lang)) {\n        let keyFullElem = newKeyboard[row][key];\n        const prevText = keyFullElem[curLang].primaryElement.innerText;\n        keyFullElem = keyFullElem[lang];\n        if (keyFullElem.isLetter){\n          keyFullElem.key.classList.add('keyboard__key_shiftable');\n        }\n        primaryKeys.forEach(prim => {\n          if (prim.innerText === prevText) {\n            keyFullElem.key.addEventListener('click', handleKeyClick);\n            prim.parentNode.replaceWith(keyFullElem.key);\n          }\n        })\n      }\n    }\n  }\n  updateLangVars(lang);\n  if (CAPS_FLAG === 1) {\n    removeClasses(primaryKeys);\n    addClasses(secondaryKeys);\n  }\n}\n\nconst keyboardCaseSwitch = () => {\n  textarea.focus();\n  if (SHIFT_FLAG === 0) {\n    if (CAPS_FLAG === 0) {\n      addClasses(primaryKeys);\n      removeClasses(secondaryKeys);\n    }\n    else {\n      addClassesToLetters(secondaryKeys);\n      removeClassesToLetters(primaryKeys);\n      addClassesToOthers(primaryKeys);\n      removeClassesToOthers(secondaryKeys);\n    }\n  }\n  else {\n    if (CAPS_FLAG === 0) {\n      addClasses(secondaryKeys);\n      removeClasses(primaryKeys);\n    }\n    else {\n      addClassesToLetters(primaryKeys);\n      removeClassesToLetters(secondaryKeys);\n      addClassesToOthers(secondaryKeys);\n      removeClassesToOthers(primaryKeys);\n    }\n  }\n}\n\nconst updateSelections = () => {\n  SELECTION_START = textarea.selectionStart;\n  SELECTION_END = textarea.selectionEnd;\n}\n\nconst updateValue = value => {\n  return textarea.value.slice(0, SELECTION_START) + value + textarea.value.slice(SELECTION_END);\n}\n\nconst addClasses = keyArr => {\n  keyArr.forEach(key => {\n    key.classList.add('keyboard__key_primary');\n    key.classList.remove('keyboard__key_secondary');\n    if (!key.parentNode.classList.contains('keyboard__key_shiftable')) {\n    }\n  })\n}\n\nconst removeClasses = keyArr => {\n  keyArr.forEach(key => {\n    key.classList.add('keyboard__key_secondary');\n    key.classList.remove('keyboard__key_primary');\n    if (!key.parentNode.classList.contains('keyboard__key_shiftable')) {\n    }\n  })\n}\n\nconst addClassesToLetters = keyArr => {\n  keyArr.forEach(key => {\n    if (key.parentNode.classList.contains('keyboard__key_shiftable')) {\n      key.classList.add('keyboard__key_primary');\n      key.classList.remove('keyboard__key_secondary');\n    }\n  })\n}\n\nconst removeClassesToLetters = keyArr => {\n  keyArr.forEach(key => {\n    if (key.parentNode.classList.contains('keyboard__key_shiftable')) {\n      key.classList.add('keyboard__key_secondary');\n      key.classList.remove('keyboard__key_primary');\n    }\n  })\n}\n\nconst addClassesToOthers = keyArr => {\n  keyArr.forEach(key => {\n    if (!key.parentNode.classList.contains('keyboard__key_shiftable')) {\n      key.classList.add('keyboard__key_primary');\n      key.classList.remove('keyboard__key_secondary');\n    }\n  })\n}\n\nconst removeClassesToOthers = keyArr => {\n  keyArr.forEach(key => {\n    if (!key.parentNode.classList.contains('keyboard__key_shiftable')) {\n      key.classList.add('keyboard__key_secondary');\n      key.classList.remove('keyboard__key_primary');\n    }\n  })\n}\n\nconst randomColor = target => {\n  const colors = [\"#9CCFB0\", \"white\", \"#BC8F89\", \"#675E91\", \"blue\", \"indigo\", \"violet\"];\n  const randomIndex = Math.floor(Math.random() * colors.length);\n  target.style.borderColor = colors[randomIndex];\n}\n\nconst timeout = async (target) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      target.style.borderColor = '';\n      resolve();\n    }, 500);\n  });\n}; ","import 'normalize.css';\nimport favIcon from './assets/favicon.png';\nimport { keyboard } from './classes.js';\nimport * as events from './events.js';\nimport './assets/styles.scss';\n\n// Cookies\nif (!document.cookie) document.cookie = 'lang=en; expires=Thu, 18 Dec 2023 12:00:00 UTC; path=/';\n\nconst cookies = decodeURIComponent(document.cookie).split(';');\nlet lang = cookies.find((cookie) => cookie.includes('lang=')).split('=')[1];\n\n// Load\nexport let textarea;\nexport let primaryKeys;\nexport let secondaryKeys;\n\nwindow.addEventListener('load', () => {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <main class=\"main\">\n      <h1 class=\"main__heading\">\n        RSS Виртуальная клавиатура\n      </h1>\n      <textarea class=\"main__textarea\" autofocus cols=38 rows=13 placeholder=\"Введите текст\"></textarea>\n      <div class=\"keyboard\">\n        <div class=\"keyboard__row\"></div>\n        <div class=\"keyboard__row\"></div>\n        <div class=\"keyboard__row\"></div>\n        <div class=\"keyboard__row\"></div>\n        <div class=\"keyboard__row\"></div>\n      </div>\n    </main>\n  `);\n  document.body.classList.add('body');\n  textarea = document.querySelector('.main__textarea');\n\n  const main = new keyboard();\n  for (let row in main) {\n    for (let key in main[row]) {\n      const indexes = Object.keys(main[row]);\n      let keyFullElem = '';\n      main[row][key].hasOwnProperty('en') ? keyFullElem = main[row][key][lang] : keyFullElem = main[row][key];\n      if (keyFullElem.isLetter){\n        keyFullElem.key.classList.add('keyboard__key_shiftable');\n      }\n      document.querySelectorAll('.keyboard__row')[Number.parseInt(row.charAt(3)) - 1].insertAdjacentElement('beforeend', keyFullElem.key);\n\n      // Std key listeners\n      textarea.addEventListener('keydown', (evt) => {\n        if (evt.metaKey || evt.altKey) {\n          evt.preventDefault();\n          textarea.focus();\n        }\n      });\n\n      // Main event listeners\n      switch (key) {\n        case 'keyBackspace': keyFullElem.key.addEventListener('click', events.handleBackspaceClick); break;\n        case 'keyTab': keyFullElem.key.addEventListener('click', events.handleTabClick); break;\n        case 'keyDelete': keyFullElem.key.addEventListener('click', events.handleDeleteClick); break;\n        case 'keyCapsLock': keyFullElem.key.addEventListener('click', events.keyboardCapsClick); break;\n        case 'keyEnter': keyFullElem.key.addEventListener('click', events.handleEnterClick); break;\n        case 'keyShiftLeft': case 'keyShiftRight': keyFullElem.key.addEventListener('mousedown', events.keyboardShiftDown); keyFullElem.key.addEventListener('mouseup', events.keyboardShiftUp); break;\n        case 'keyCtrlLeft': keyFullElem.key.addEventListener('mousedown', events.handleCtrlLeftDown); keyFullElem.key.addEventListener('mouseup', events.handleCtrlLeftUp); break;\n        case 'keyAltLeft': keyFullElem.key.addEventListener('mousedown', events.handleAltLeftDown); keyFullElem.key.addEventListener('mouseup', events.handleAltLeftUp); break;\n        case 'keyUp': keyFullElem.key.addEventListener('click', events.handleKeyArrowClick); break;\n        case 'keyLeft': keyFullElem.key.addEventListener('click', events.handleKeyArrowClick); break;\n        case 'keyDown': keyFullElem.key.addEventListener('click', events.handleKeyArrowClick); break;\n        case 'keyRight': keyFullElem.key.addEventListener('click', events.handleKeyArrowClick); break;\n        case 'keyWin': case 'keyAltRight': case 'keyCtrlRight': keyFullElem.key.addEventListener('click', events.handleEmptyClick); break;\n        default: keyFullElem.key.addEventListener('click', events.handleKeyClick);\n      }\n\n      // Special keys styles\n      switch (key) {\n        case 'keyCapsLock': keyFullElem.key.classList.add('keyboard__key_caps'); break;\n        case 'keyShiftLeft': keyFullElem.key.classList.add('keyboard__key_left-shift'); break;\n        case 'keyCtrlLeft': keyFullElem.key.classList.add('keyboard__key_left-ctrl'); break;\n        case 'keyAltLeft': keyFullElem.key.classList.add('keyboard__key_left-alt'); break;\n        case 'keySpace': keyFullElem.key.classList.add('keyboard__key_space'); break;\n        case indexes[indexes.length - 1]: keyFullElem.key.classList.add('keyboard__key_last');\n      }\n\n      // KeyBoard Highlight Listeners\n      textarea.addEventListener('keydown', events.handleKeyDown);\n      textarea.addEventListener('keyup', events.handleKeyUp);\n      textarea.addEventListener('blur', events.focusLose);\n    }\n  }\n  primaryKeys = document.querySelectorAll('.keyboard__key_primary');\n  secondaryKeys = document.querySelectorAll('.keyboard__key_secondary');\n\n  document.querySelector('.body').insertAdjacentHTML('beforeend', `\n    <aside class=\"legend\">\n      <p class=\"legend__desc\">Клавиатура создана в Windows OS</p>\n      <p class=\"legend__desc\">Для переключения языка нажмите левые <span class=\"legend__key\">Ctrl</span> + <span class=\"legend__key\">Alt</span></p>\n      <p class=\"legend__desc\">Клавиатура подсвечивается, если символы раскладок одинаковы. В ином случае считаю это излишним</p>\n    </aside>\n  `)\n});\n\nexport const updateLangVars = lang => {\n  primaryKeys = document.querySelectorAll('.keyboard__key_primary');\n  secondaryKeys = document.querySelectorAll('.keyboard__key_secondary');\n  document.cookie = `lang=${lang}; expires=Thu, 18 Dec 2023 12:00:00 UTC; path=/`;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":[],"sourceRoot":""}